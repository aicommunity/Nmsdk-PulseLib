// ===========================================================
// Version:        3.0.2
// ===========================================================
/* ***********************************************************
@Copyright Alexander V. Bakhshiev, 2002.
E-mail:		alexab@ailab.ru
url:            http://ailab.ru

This file - part of the project: Neuro Modeler Software Developer Kit (NMSDK)

File License:        BSD License
Project License:     BSD License
See file license.txt for more information
*********************************************************** */

#ifndef NCONST_GENERATOR_H
#define NCONST_GENERATOR_H

#include "NSource.h"


namespace NMSDK {

class RDK_LIB_TYPE NConstGenerator: public NSource
{
public: // Общедоступные свойства
/// Амплитуда выходного сигнала
ULProperty<double,NConstGenerator, ptPubParameter> Amplitude;

protected: // Временные переменные
/// Флаг необходимости сменить константу на выходе
bool UpdateOutputFlag;

public: // Методы
// --------------------------
// Конструкторы и деструкторы
// --------------------------
NConstGenerator(void);
virtual ~NConstGenerator(void);
// --------------------------

protected:
// --------------------------
// Методы управления общедоступными свойствами
// --------------------------
/// Устанавливает амплитуду импульсов
bool SetAmplitude(const double &value);
// --------------------------

public:
// --------------------------
// Системные методы управления объектом
// --------------------------
/// Выделяет память для новой чистой копии объекта этого класса
virtual NConstGenerator* New(void);
// --------------------------

// --------------------------
// Скрытые методы управления счетом
// --------------------------
protected:
/// Восстановление настроек по умолчанию и сброс процесса счета
virtual bool ADefault(void);

/// Обеспечивает сборку внутренней структуры объекта
/// после настройки параметров
/// Автоматически вызывает метод Reset() и выставляет Ready в true
/// в случае успешной сборки
virtual bool ABuild(void);

/// Сброс процесса счета.
virtual bool AReset(void);

/// Выполняет расчет этого объекта
virtual bool ACalculate(void);
// --------------------------
};

}
#endif

